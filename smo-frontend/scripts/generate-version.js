import { writeFileSync } from "node:fs";
import { dirname, join } from "node:path";
import { fileURLToPath } from "node:url";

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

// Generate version number based on current date
// Format: YYYY.MM.DD.HHMM
const now = new Date();
const year = now.getFullYear();
const month = String(now.getMonth() + 1).padStart(2, "0");
const day = String(now.getDate()).padStart(2, "0");
const hours = String(now.getHours()).padStart(2, "0");
const minutes = String(now.getMinutes()).padStart(2, "0");

const version = `${year}.${month}.${day}.${hours}${minutes}`;

// Generate version.ts file
const versionTsContent = `// This file is auto-generated by scripts/generate-version.js
// Do not edit manually

export const VERSION = "${version}";
export const BUILD_DATE = "${now.toISOString()}";
`;

// Generate version.txt file
const versionTxtContent = version;

// Write files
const srcDir = join(__dirname, "..", "src");
const publicDir = join(__dirname, "..", "public");

try {
  writeFileSync(join(srcDir, "version.ts"), versionTsContent, "utf8");
  console.log(`✓ Generated src/version.ts with version ${version}`);

  writeFileSync(join(publicDir, "version.txt"), versionTxtContent, "utf8");
  console.log(`✓ Generated public/version.txt with version ${version}`);
} catch (error) {
  console.error("Error generating version files:", error);
  throw error;
}
