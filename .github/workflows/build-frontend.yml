name: Frontend

on:
  push:
    branches:
      - master
    paths:
      - "smo-frontend/**"
      - ".github/workflows/build-frontend.yml"
  pull_request:
    branches:
      - master
    paths:
      - "smo-frontend/**"

jobs:
  build-frontend:
    name: Build and Push
    runs-on: ubuntu-latest
    env:
      SHOULD_PUSH: ${{ github.event_name != 'pull_request' && github.ref == 'refs/heads/master' && secrets.DOCKER_REGISTRY_USERNAME != '' }}
      DEPLOYMENT_WEBHOOK_URL: ${{ secrets.DEPLOYMENT_WEBHOOK_URL }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          # Dynamic image name: if DOCKER_REGISTRY_URL is set use <registry>/smo-frontend, otherwise just 'smo-frontend'
          images: ${{ vars.DOCKER_REGISTRY_URL && format('{0}/smo-frontend', vars.DOCKER_REGISTRY_URL) || 'smo-frontend' }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}
            type=sha
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to the registry
        if: ${{ env.SHOULD_PUSH == 'true' }}
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.DOCKER_REGISTRY_URL }}
          username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
      - name: Build
        uses: docker/build-push-action@v5
        with:
          context: ./smo-frontend
          push: ${{ env.SHOULD_PUSH == 'true' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=frontend
          cache-to: type=gha,mode=max,scope=frontend

      # webhook to trigger deployment
      # only trigger on new tags and if the DEPLOYMENT_WEBHOOK_URL secret is set
      - name: Bypass Cloudflare for GitHub Action
        continue-on-error: true
        if: env.SHOULD_PUSH == 'true' && env.DEPLOYMENT_WEBHOOK_URL != ''
        uses: xiaotianxt/bypass-cloudflare-for-github-action@v1.1.1
        with:
          cf_zone_id: ${{ secrets.CF_ZONE_ID }}
          cf_api_token: ${{ secrets.CF_API_TOKEN }}
      - name: Deploy
        continue-on-error: true
        if: env.SHOULD_PUSH == 'true' && env.DEPLOYMENT_WEBHOOK_URL != ''
        uses: wei/curl@v1
        with:
          args: -X POST ${{ secrets.DEPLOYMENT_WEBHOOK_URL }}
