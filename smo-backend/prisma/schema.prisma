generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [postgis(version: "3.4.2")]
}

model routepoints {
  id         Int      @id @default(autoincrement())
  route_id   String   @db.VarChar(8)
  order      Int?
  created_at DateTime @default(now()) @db.Timestamp(6)

  point Unsupported("geometry(Point, 4326)")

  @@index([route_id], map: "route_id_index")
  @@index([point], map: "routepoints_point_index", type: Gist)
}

model stats {
  created_at   DateTime @default(now()) @db.Timestamp(6)
  service_id   String   @db.VarChar(12)
  duration     Int
  count        Int
  server_count Int?

  @@id([service_id, created_at])
  @@index([service_id], map: "service_id_index")
}

model signals {
  name                  String              @id @db.VarChar(12)
  extra                 String              @db.VarChar(255)
  accuracy              Float
  type                  String?             @db.VarChar(10)
  created_at            DateTime            @default(now()) @db.Timestamp(6)
  role                  String?             @db.VarChar(20)
  prev_finalized        Boolean             @default(false) @db.Boolean
  next_finalized        Boolean             @default(false) @db.Boolean
  prev_regex            String?             @db.VarChar(100)
  next_regex            String?             @db.VarChar(100)
  prevSignalConnections signalConnections[] @relation("prevSignalConnections")
  nextSignalConnections signalConnections[] @relation("nextSignalConnections")

  point Unsupported("geometry(Point, 4326)")

  @@index([point], map: "signals_point_index", type: Gist)
}

model signalConnections {
  prev       String   @db.VarChar(12)
  prevSignal signals  @relation("prevSignalConnections", fields: [prev], references: [name])
  next       String   @db.VarChar(12)
  nextSignal signals  @relation("nextSignalConnections", fields: [next], references: [name])
  // distance is calculated at insert, so it's not a required field but it always has a value
  distance   Float    @default(0) @db.DoublePrecision
  created_at DateTime @default(now()) @db.Timestamp

  @@id([prev, next], map: "signal_connections_pk")
  @@map("signal_connections")
}

// error log for signal connections that need to be manually checked
model signalConnectionErrors {
  prev       String   @db.VarChar(12)
  next       String   @db.VarChar(12)
  error      String   @db.VarChar(255)
  checked    Boolean  @default(false) @db.Boolean
  created_at DateTime @default(now()) @db.Timestamp

  @@id([prev, next, error], map: "signal_connection_errors_pk")
  @@map("signal_connection_errors")
}
